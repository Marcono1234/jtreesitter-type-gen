name: Build

on:
  push:
    branches-ignore:
      # Ignore Dependabot branches because it will also open a pull request, which would cause the
      # workflow to redundantly run twice
      - dependabot/**
  pull_request:


permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 22

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build with Gradle
        # Don't automatically download JDK toolchain; existing JDK of this workflow should be compatible
        run: ./gradlew build -Porg.gradle.java.installations.auto-download=false


  cli-integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 22

      # TODO: Maybe create tree-sitter library binary using https://github.com/tree-sitter/setup-action/blob/master/lib/action.yml,
      #   or switch to cmake command used by that action, which also works for Windows (due to CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS);
      #   at least so that it is easier for users to use this as reference for setting the integration tests up locally
      - name: Build tree-sitter library
        run: |
          git clone --branch v0.25.10 --depth=1 --no-checkout https://github.com/tree-sitter/tree-sitter.git tree-sitter
          cd tree-sitter
          # Only checkout what is needed for compiling
          git checkout HEAD -- lib/src lib/include
          gcc --version
          # See https://tree-sitter.github.io/tree-sitter/using-parsers#building-the-library
          gcc -shared -o ../cli/libtree-sitter.so -fPIC -I lib/include -I lib/src lib/src/lib.c

      - name: Build tree-sitter-java
        run: |
          LANG="java"
          git clone --branch v0.23.5 --depth=1 --no-checkout https://github.com/tree-sitter/tree-sitter-$LANG.git tree-sitter-$LANG
          cd tree-sitter-$LANG
          # Only checkout what is needed for compiling
          git checkout HEAD -- src
          gcc --version
          gcc -shared -o ../cli/liblang-$LANG.so -fPIC -I src/tree_sitter src/parser.c

      # Set up tree-sitter CLI to re-generate tree-sitter-json source code using newer tree-sitter version (to include language metadata)
      # TODO: Remove this (and the `tree-sitter generate` command below) again once newer version of tree-sitter-json is available
      - name: Set up tree-sitter
        uses: tree-sitter/setup-action/cli@c4c258862a6a7e43a7aef152256bbf659972c408
        with:
          tree-sitter-ref: v0.25.10
      - name: Build tree-sitter-json
        run: |
          LANG="json"
          git clone --branch v0.24.8 --depth=1 --no-checkout https://github.com/tree-sitter/tree-sitter-$LANG.git tree-sitter-$LANG
          cd tree-sitter-$LANG
          ## TODO: Uncomment again (and remove `git checkout HEAD` below) once `tree-sitter generate` is not necessary anymore
          ## # Only checkout what is needed for compiling
          ## git checkout HEAD -- src
          # Re-generate parser source code using newer tree-sitter CLI
          git checkout HEAD
          tree-sitter generate
          gcc --version
          gcc -shared -o ../cli/liblang-$LANG.so -fPIC -I src/tree_sitter src/parser.c

      - name: Build tree-sitter-python
        run: |
          LANG="python"
          git clone --branch v0.25.0 --depth=1 --no-checkout https://github.com/tree-sitter/tree-sitter-$LANG.git tree-sitter-$LANG
          cd tree-sitter-$LANG
          # Only checkout what is needed for compiling
          git checkout HEAD -- src
          gcc --version
          gcc -shared -o ../cli/liblang-$LANG.so -fPIC -I src/tree_sitter src/parser.c src/scanner.c

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build with Gradle
        run: |
          # On Linux must set `LD_LIBRARY_PATH`, otherwise the library cannot be found
          export LD_LIBRARY_PATH="cli:$LD_LIBRARY_PATH"
          # Don't automatically download JDK toolchain; existing JDK of this workflow should be compatible
          ./gradlew cli:integrationTest -Porg.gradle.java.installations.auto-download=false
